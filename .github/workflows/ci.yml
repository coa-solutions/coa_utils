name: CI

on:
  push:
    branches:
      - main

env:
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  SLACK_DEFAULT_CHANNEL_ID: ${{ secrets.SLACK_DEFAULT_CHANNEL_ID }}
  DENO_DIR: .deno_cache
  tests: passed
  benchmarks: passed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1

      - name: Cache Deno dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ secrets.CACHE_VERSION }}-${{ hashFiles('deno.lock') }}

      - name: Run tests
        id: run_tests
        run: deno task test || echo "tests=failed" >> $GITHUB_ENV

      - name: Run benchmarks
        id: run_benchmarks
        run: deno task bench || echo "benchmarks=failed" >> $GITHUB_ENV

      - name: Increment version and push tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch --tags
          latest_tag=$(git tag --sort=committerdate | grep -E '^v0\.[0-9]+$' | tail -1)
          if [ -z "$latest_tag" ]; then
            new_version="v0.1"
          else
            IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
            major="${version_parts[0]}"
            minor="${version_parts[1]}"
            new_minor=$((minor + 1))
            new_version="v$major.$new_minor"
          fi
          git tag "$new_version"
          git push origin "$new_version"
          deno_package_url="https://deno.land/x/coa_utils@$new_version"
          echo "### Latest Version Tag" >> $GITHUB_STEP_SUMMARY
          echo "The latest version tag is: $new_version" >> $GITHUB_STEP_SUMMARY
          echo "Deno package URL: $deno_package_url" >> $GITHUB_STEP_SUMMARY
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: Send POST request to Slack
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}
        run: |
          curl -X POST "https://coa-utils.deno.dev/${{ secrets.URL_PATH_KEY }}/slack/coa_utils" \
          -H "Content-Type: application/json" \
          -d "{
              \"tests\": \"${{ env.tests }}\",
              \"benchmarks\": \"${{ env.benchmarks }}\",
              \"tag\": \"${{ env.NEW_VERSION }}\"
          }"
